!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AC_KSEQ_H	kseq.h	29;"	d
AC_KSORT_H	ksort.h	29;"	d
AC_KVEC_H	kvec.h	49;"	d
AC_VERSION_KHASH_H	khash.h	126;"	d
BAMLITE_H_	bamlite.h	2;"	d
BAM_CDEL	bamlite.h	61;"	d
BAM_CHARD_CLIP	bamlite.h	64;"	d
BAM_CIGAR_MASK	bamlite.h	49;"	d
BAM_CIGAR_SHIFT	bamlite.h	48;"	d
BAM_CIGAR_STR	bamlite.h	47;"	d
BAM_CIGAR_TYPE	bamlite.h	50;"	d
BAM_CINS	bamlite.h	60;"	d
BAM_CMATCH	bamlite.h	59;"	d
BAM_CPAD	bamlite.h	65;"	d
BAM_CREF_SKIP	bamlite.h	62;"	d
BAM_CSOFT_CLIP	bamlite.h	63;"	d
BAM_FDUP	bamlite.h	45;"	d
BAM_FMREVERSE	bamlite.h	40;"	d
BAM_FMUNMAP	bamlite.h	38;"	d
BAM_FPAIRED	bamlite.h	35;"	d
BAM_FPROPER_PAIR	bamlite.h	36;"	d
BAM_FQCFAIL	bamlite.h	44;"	d
BAM_FREAD1	bamlite.h	41;"	d
BAM_FREAD2	bamlite.h	42;"	d
BAM_FREVERSE	bamlite.h	39;"	d
BAM_FSECONDARY	bamlite.h	43;"	d
BAM_FUNMAP	bamlite.h	37;"	d
BC_LEN	col_10x_lnks.c	30;"	d	file:
BUILD_GRAPH_H	build_graph.h	19;"	d
CC	makefile	/^CC      =  gcc$/;"	m
CFLAGS	makefile	/^CFLAGS  =  -g -Wall -D VERBOSE -D PRINT_COVERAGE #-O2  $/;"	m
KDQ_DECLARE	kdq.h	106;"	d
KDQ_INIT	kdq.h	104;"	d
KDQ_INIT2	kdq.h	92;"	d
KHASH_DECLARE	khash.h	357;"	d
KHASH_INIT	khash.h	365;"	d
KHASH_INIT2	khash.h	361;"	d
KHASH_MAP_INIT_INT	khash.h	593;"	d
KHASH_MAP_INIT_INT64	khash.h	608;"	d
KHASH_MAP_INIT_STR	khash.h	624;"	d
KHASH_SET_INIT_INT	khash.h	585;"	d
KHASH_SET_INIT_INT64	khash.h	600;"	d
KHASH_SET_INIT_STR	khash.h	616;"	d
KRADIX_SORT_INIT	ksort.h	134;"	d
KSEQ_DECLARE	kseq.h	259;"	d
KSEQ_INIT	kseq.h	257;"	d
KSEQ_INIT2	kseq.h	251;"	d
KSORT_INIT	ksort.h	41;"	d
KSORT_INIT_GENERIC	ksort.h	129;"	d
KSORT_INIT_STR	ksort.h	130;"	d
KSORT_SWAP	ksort.h	39;"	d
KSTREAM_DECLARE	kseq.h	169;"	d
KSTREAM_INIT	kseq.h	167;"	d
KSTREAM_INIT2	kseq.h	159;"	d
KSTRING_T	bed.h	26;"	d
KSTRING_T	kseq.h	96;"	d
KSTRING_T	ld_io.h	27;"	d
KS_SEP_LINE	kseq.h	37;"	d
KS_SEP_MAX	kseq.h	38;"	d
KS_SEP_SPACE	kseq.h	35;"	d
KS_SEP_TAB	kseq.h	36;"	d
LDFLAGS	makefile	/^LDFLAGS = -lz -lm$/;"	m
PROG	makefile	/^PROG = pin_10x  pin_hic pin_ld$/;"	m
RS_MIN_SIZE	ksort.h	132;"	d
SDICT_H	sdict.h	2;"	d
USE_VERBOSE_ZLIB_WRAPPERS	bamlite.h	11;"	d
_BED_H	bed.h	20;"	d
_CDICT_H	cdict.h	19;"	d
_COL_10X_LNKS_H	col_10x_lnks.h	19;"	d
_COL_GM_LNKS_H	col_ld_lnks.h	20;"	d
_COL_HIC_LNKS_H	col_hic_lnks.h	20;"	d
_GET_SEQ_H	get_seq.h	20;"	d
_GRAPH_H	graph.h	19;"	d
_LD_H	ld.h	2;"	d
_LD_IO_H	ld_io.h	19;"	d
__AC_KDQ_H	kdq.h	2;"	d
__AC_KHASH_H	khash.h	118;"	d
__KDQ_IMPL	kdq.h	19;"	d
__KDQ_TYPE	kdq.h	7;"	d
__KHASH_IMPL	khash.h	211;"	d
__KHASH_PROTOTYPES	khash.h	202;"	d
__KHASH_TYPE	khash.h	194;"	d
__KSEQ_BASIC	kseq.h	182;"	d
__KSEQ_READ	kseq.h	202;"	d
__KSEQ_TYPE	kseq.h	244;"	d
__KS_BASIC	kseq.h	60;"	d
__KS_GETUNTIL	kseq.h	109;"	d
__KS_INLINED	kseq.h	75;"	d
__KS_TYPE	kseq.h	40;"	d
__ac_HASH_UPPER	khash.h	/^static const double __ac_HASH_UPPER = 0.77;$/;"	v
__ac_Wang_hash	khash.h	/^static kh_inline khint_t __ac_Wang_hash(khint_t key)$/;"	f
__ac_X31_hash_string	khash.h	/^static kh_inline khint_t __ac_X31_hash_string(const char *s)$/;"	f
__ac_fsize	khash.h	173;"	d
__ac_isdel	khash.h	166;"	d
__ac_iseither	khash.h	167;"	d
__ac_isempty	khash.h	165;"	d
__ac_set_isboth_false	khash.h	170;"	d
__ac_set_isdel_false	khash.h	168;"	d
__ac_set_isdel_true	khash.h	171;"	d
__ac_set_isempty_false	khash.h	169;"	d
__kstring_t	bed.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	kseq.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	ld_io.h	/^typedef struct __kstring_t {$/;"	s
_skip_aux	bamlite.c	178;"	d	file:
aa_hic	aa_hic.c	/^int aa_hic(char **bam_fn, int n_bam, char *gap_fn, int min_mq, int min_cov, int max_cov, uint32_t max_ins_len)$/;"	f
add_a	graph.c	/^int add_a(graph_t *g, char *s)$/;"	f
add_asm	graph.c	/^int add_asm(graph_t *g, char *name,  uint32_t *nodes, uint32_t n) $/;"	f
add_dedge	graph.c	/^int add_dedge(graph_t *g, char *sname, uint32_t sl, char *ename, uint32_t er, uint32_t wt)$/;"	f
add_e	graph.c	/^int add_e(graph_t *g, char *s)$/;"	f
add_edge1	graph.c	/^int add_edge1(graph_t *g, edge_t *e)$/;"	f
add_node	graph.c	/^uint32_t add_node(graph_t *g, char* name, char *seq, uint32_t len)$/;"	f
add_p	graph.c	/^int add_p(graph_t *g, char *s)$/;"	f
add_path	graph.c	/^uint32_t add_path(graph_t *g, char *name,  uint32_t *nodes, uint32_t n, uint32_t is_circ) $/;"	f
add_record	col_ld_lnks.c	/^int add_record(ld_t *r, sdict_t *ctgs, cdict_t *cds)$/;"	f
add_s	graph.c	/^int add_s(graph_t *g, char *s)$/;"	f
add_udedge	graph.c	/^int add_udedge(graph_t *g, char *sname, uint32_t sl, char *ename, uint32_t er, uint32_t wt)$/;"	f
aln_inf_t	aa_hic.c	/^}aln_inf_t;$/;"	t	typeref:struct:__anon2	file:
aln_inf_t	col_10x_lnks.c	/^}aln_inf_t;$/;"	t	typeref:struct:__anon9	file:
aln_inf_t	col_hic_lnks.c	/^}aln_inf_t;$/;"	t	typeref:struct:__anon1	file:
anothernorm	build_graph.c	/^int anothernorm(cdict_t *cds, sdict_t *ctgs)$/;"	f
ary	col_10x_lnks.c	/^	bc_t *ary;$/;"	m	struct:__anon11	file:
as	aa_hic.c	/^	int mq:15, rev:1, as:16;$/;"	m	struct:__anon2	file:
as	col_10x_lnks.c	/^	int mq:15, rev:1, as:16;$/;"	m	struct:__anon9	file:
as	graph.h	/^	asms_t as;$/;"	m	struct:__anon24
asm_t	graph.h	/^}asm_t;$/;"	t	typeref:struct:__anon22
asms	graph.h	/^	asm_t *asms;$/;"	m	struct:__anon23
asms_t	graph.h	/^} asms_t;$/;"	t	typeref:struct:__anon23
bam1_aux	bamlite.h	95;"	d
bam1_cigar	bamlite.h	90;"	d
bam1_core_t	bamlite.h	/^} bam1_core_t;$/;"	t	typeref:struct:__anon13
bam1_mstrand	bamlite.h	89;"	d
bam1_qname	bamlite.h	91;"	d
bam1_qual	bamlite.h	93;"	d
bam1_qual	bamlite.h	96;"	d
bam1_seq	bamlite.h	92;"	d
bam1_seqi	bamlite.h	94;"	d
bam1_strand	bamlite.h	88;"	d
bam1_t	bamlite.h	/^} bam1_t;$/;"	t	typeref:struct:__anon14
bamFile	bamlite.h	/^typedef gzFile bamFile;$/;"	t
bam_aux_get	bamlite.c	/^uint8_t *bam_aux_get(const bam1_t *b, const char tag[2])$/;"	f
bam_cigar_gen	bamlite.h	55;"	d
bam_cigar_op	bamlite.h	52;"	d
bam_cigar_opchr	bamlite.h	54;"	d
bam_cigar_oplen	bamlite.h	53;"	d
bam_cigar_type	bamlite.h	56;"	d
bam_close	bamlite.h	18;"	d
bam_close	bamlite.h	23;"	d
bam_destroy1	bamlite.h	99;"	d
bam_dopen	bamlite.h	17;"	d
bam_dopen	bamlite.h	22;"	d
bam_header_destroy	bamlite.c	/^void bam_header_destroy(bam_header_t *header)$/;"	f
bam_header_init	bamlite.c	/^bam_header_t *bam_header_init()$/;"	f
bam_header_read	bamlite.c	/^bam_header_t *bam_header_read(bamFile fp)$/;"	f
bam_header_t	bamlite.h	/^} bam_header_t;$/;"	t	typeref:struct:__anon12
bam_init1	bamlite.h	98;"	d
bam_is_be	bamlite.c	/^int bam_is_be;$/;"	v
bam_is_big_endian	bamlite.c	/^static inline int bam_is_big_endian()$/;"	f	file:
bam_open	bamlite.h	16;"	d
bam_open	bamlite.h	21;"	d
bam_read	bamlite.h	19;"	d
bam_read	bamlite.h	24;"	d
bam_read1	bamlite.c	/^int bam_read1(bamFile fp, bam1_t *b)$/;"	f
bam_swap_endian_2	bamlite.c	/^static inline uint16_t bam_swap_endian_2(uint16_t v)$/;"	f	file:
bam_swap_endian_2p	bamlite.c	/^static inline void *bam_swap_endian_2p(void *x)$/;"	f	file:
bam_swap_endian_4	bamlite.c	/^static inline uint32_t bam_swap_endian_4(uint32_t v)$/;"	f	file:
bam_swap_endian_4p	bamlite.c	/^static inline void *bam_swap_endian_4p(void *x)$/;"	f	file:
bam_swap_endian_8	bamlite.c	/^static inline uint64_t bam_swap_endian_8(uint64_t v)$/;"	f	file:
bam_swap_endian_8p	bamlite.c	/^static inline void *bam_swap_endian_8p(void *x)$/;"	f	file:
bamlite_gzclose	bamlite.c	/^int bamlite_gzclose(gzFile file) {$/;"	f
bamlite_gzopen	bamlite.c	/^gzFile bamlite_gzopen(const char *fn, const char *mode) {$/;"	f
bamlite_gzread	bamlite.c	/^int bamlite_gzread(gzFile file, void *ptr, unsigned int len) {$/;"	f
bc_ary_push	col_10x_lnks.c	/^void bc_ary_push(bc_ary_t *l, bc_t *z)$/;"	f
bc_ary_t	col_10x_lnks.c	/^}bc_ary_t;$/;"	t	typeref:struct:__anon11	file:
bc_key	col_10x_lnks.c	45;"	d	file:
bc_t	col_10x_lnks.c	/^}bc_t;$/;"	t	typeref:struct:__anon10	file:
bctn	col_10x_lnks.c	/^	uint64_t bctn;$/;"	m	struct:__anon10	file:
bed_close	bed.c	/^int bed_close(bed_file_t *pf)$/;"	f
bed_file_t	bed.h	/^}bed_file_t;$/;"	t	typeref:struct:__anon25
bed_hdr_read	bed.c	/^int bed_hdr_read(bed_file_t *pf, bed_hdr_t *hdr)$/;"	f
bed_hdr_t	bed.h	/^}bed_hdr_t;$/;"	t	typeref:struct:__anon26
bed_init_track	bed.c	/^int bed_init_track(char *s, int sl, bed_hdr_t *hdr)$/;"	f
bed_open	bed.c	/^bed_file_t *bed_open(const char *fn)$/;"	f
bed_parse	bed.c	/^int bed_parse(int l, char *s, bed_rec_t *pr) \/\/ s must be NULL terminated$/;"	f
bed_parse_lnks	bed.c	/^int bed_parse_lnks(int l, char *s, lnk_rec_t *pr) \/\/ s must be NULL terminated$/;"	f
bed_read	bed.c	/^int bed_read(bed_file_t *pf, bed_rec_t *r)$/;"	f
bed_rec_t	bed.h	/^}bed_rec_t;$/;"	t	typeref:struct:__anon27
bin	bamlite.h	/^	uint32_t bin:16, qual:8, l_qname:8;$/;"	m	struct:__anon13
buf	bed.h	/^	kstring_t buf;$/;"	m	struct:__anon25
buf	ld_io.h	/^	kstring_t buf;	$/;"	m	struct:__anon4
build_graph	build_graph.c	/^graph_t *build_graph(cdict_t *cds, sdict_t *ctgs)$/;"	f
buildg	build_graph.c	/^int buildg(char *fn, char *edge_fn, int min_wt, int use_sat)$/;"	f
casm	graph.h	/^	uint32_t casm; \/\/currently assembly$/;"	m	struct:__anon23
cd_add	cdict.c	/^void cd_add(cdict_t *c, const char *name, uint32_t is_l, uint32_t snp_n)$/;"	f
cd_add2	cdict.c	/^void cd_add2(cdict_t *c, const char *name, uint32_t is_l, uint32_t cnt, uint32_t snp_n)$/;"	f
cd_cnt_t	cdict.h	/^} cd_cnt_t;$/;"	t	typeref:struct:__anon5
cd_destroy	cdict.c	/^void cd_destroy(cdict_t *c)$/;"	f
cd_init	cdict.c	/^void cd_init(cdict_t *c)$/;"	f
cd_norm	cdict.c	/^void cd_norm(cdict_t *c)$/;"	f
cd_set_lim	cdict.c	/^void cd_set_lim(cdict_t *c, uint32_t n, uint32_t min_wt)$/;"	f
cd_sort	cdict.c	/^void cd_sort(cdict_t *c)$/;"	f
cdict_t	cdict.h	/^}cdict_t;$/;"	t	typeref:struct:__anon6
check_left_half	col_10x_lnks.c	/^uint32_t check_left_half(uint32_t le, uint32_t rs, uint32_t p) \/\/ 1 for left half 0 for right half 2 for middle$/;"	f
check_left_half	col_hic_lnks.c	/^uint32_t check_left_half(uint32_t le, uint32_t rs, uint32_t p) \/\/ 1 for left half 0 for right half 2 for middle$/;"	f
check_left_half	col_ld_lnks.c	/^uint32_t check_left_half(uint32_t le, uint32_t rs, uint32_t p) \/\/ 1 for left half 0 for right half 2 for middle$/;"	f
chiSqFisher	ld.h	/^	double		chiSqFisher;$/;"	m	struct:__anon15
chiSqModel	ld.h	/^	double		chiSqModel;		$/;"	m	struct:__anon15
chl_col_ctgs	col_hic_lnks.c	/^int chl_col_ctgs(char *bam_fn, sdict_t *ctgs, uint32_t ws)$/;"	f
clean_edges	graph.c	/^int clean_edges(graph_t *g)$/;"	f
close_ld	ld_io.c	/^int close_ld(ld_file_t *fp)$/;"	f
cmp_cnt	cdict.c	/^int cmp_cnt(const void *a, const void *b) $/;"	f
cnt	cdict.h	/^	uint32_t cnt:31, is_added:1;	$/;"	m	struct:__anon5
cnts	cdict.h	/^	cd_cnt_t	*cnts;$/;"	m	struct:__anon6
col_10x_lnks	col_10x_lnks.c	/^int col_10x_lnks(char *bam_fn[], int n_bam, int min_mq,  uint32_t win_s, uint32_t max_is, int min_bc, int max_bc, uint32_t min_inner_bcn, int opt)$/;"	f
col_bcnt	col_10x_lnks.c	/^int col_bcnt(aln_inf_t  *fal, uint32_t bc, int min_mq, uint32_t max_is, bc_ary_t *l)$/;"	f
col_cds	col_10x_lnks.c	/^cdict_t *col_cds(bc_ary_t *bc_l, uint32_t min_bc, uint32_t max_bc, uint32_t min_inner_bcn, int n_targets, sdict_t *ctgs)$/;"	f
col_ctgs	build_graph.c	/^sdict_t *col_ctgs(char *fn)$/;"	f
col_ctgs_from_graph	build_graph.c	/^sdict_t *col_ctgs_from_graph(graph_t *g)$/;"	f
col_gm_lnks	col_ld_lnks.c	/^int col_gm_lnks(char *snps_fn, char **ld_fn, int n_ld, double pv) \/\/will be changed into two_fn$/;"	f
col_hic_lnks	col_hic_lnks.c	/^int col_hic_lnks(char *sat_fn, char **bam_fn, int n_bam, int min_mq, uint32_t win_s)$/;"	f
col_joints	col_10x_lnks.c	/^int col_joints(uint32_t ind1l, uint32_t ind2l, sdict_t *ctgs, cdict_t *cs)$/;"	f
col_joints	col_hic_lnks.c	/^int col_joints(aln_inf_t *a, int a_cnt, aln_inf_t *f, int f_cnt, sdict_t *ctgs, sdict_t *scfs, cdict_t *cs)$/;"	f
col_pos	aa_hic.c	/^void col_pos(aln_inf_t  *fal, int min_mq, uint32_t max_ins_len, ns_t *ns, ctg_pos_t *d)$/;"	f
col_snp_distri	col_ld_lnks.c	/^sdict_t *col_snp_distri(char *fn)$/;"	f
core	bamlite.h	/^	bam1_core_t core;$/;"	m	struct:__anon14
cp_seq	graph.c	/^int cp_seq(char *s, char *t, uint32_t len, int is_rc)$/;"	f
ct	aa_hic.c	/^	cord_t *ct;$/;"	m	struct:__anon3	file:
ctgn	bed.h	/^	char		*ctgn;$/;"	m	struct:__anon27
ctgn	bed.h	/^	char *ctgn, *ctgn2;$/;"	m	struct:__anon29
ctgn	bed.h	/^	char *ctgn;$/;"	m	struct:__anon28
ctgn1	ld.h	/^	char		*ctgn1;$/;"	m	struct:__anon15
ctgn2	bed.h	/^	char *ctgn, *ctgn2;$/;"	m	struct:__anon29
ctgn2	ld.h	/^	char		*ctgn2;$/;"	m	struct:__anon15
d	ld.h	/^	float		d, dprime; \/\/ D and D'$/;"	m	struct:__anon15
data	bamlite.h	/^	uint8_t *data;$/;"	m	struct:__anon14
del_r	graph.c	/^int del_r(graph_t *g, edge_t *a) \/\/ remove reverse edge$/;"	f
depth	ksort.h	/^	int depth;$/;"	m	struct:__anon30
desc	bed.h	/^	char *desc;$/;"	m	struct:__anon26
dprime	ld.h	/^	float		d, dprime; \/\/ D and D'$/;"	m	struct:__anon15
dump_sat	graph.c	/^int dump_sat(graph_t *g)$/;"	f
e	aa_hic.c	/^	uint32_t s, e, tid;$/;"	m	struct:__anon2	file:
e	bed.h	/^	uint32_t s, e;$/;"	m	struct:__anon28
e	col_10x_lnks.c	/^	uint32_t s, e, tid;$/;"	m	struct:__anon9	file:
e	col_10x_lnks.c	/^	uint32_t s, e; \/\/no more than $/;"	m	struct:__anon10	file:
edge_idx	graph.h	/^	uint64_t *edge_idx; \/\/ idx + num $/;"	m	struct:__anon19
edge_key	graph.c	37;"	d	file:
edge_n	graph.h	81;"	d
edge_t	graph.h	/^}edge_t;$/;"	t	typeref:struct:__anon18
edges	graph.h	/^	edge_t *edges;$/;"	m	struct:__anon19
edges	graph.h	80;"	d
edges_t	graph.h	/^}edges_t;$/;"	t	typeref:struct:__anon19
eg	graph.h	/^	edges_t eg;$/;"	m	struct:__anon24
flag	bamlite.h	/^	uint32_t flag:16, n_cigar:16;$/;"	m	struct:__anon13
flags	ld.h	/^	uint16_t    flags;$/;"	m	struct:__anon15
fp	bed.h	/^	void *fp;$/;"	m	struct:__anon25
fp	ld_io.h	/^	void *fp;$/;"	m	struct:__anon4
free_node	graph.c	/^void free_node(vertex_t *n)$/;"	f
gap_rec_t	bed.h	/^}gap_rec_t;$/;"	t	typeref:struct:__anon28
get_aux_type2size	bamlite.c	/^int get_aux_type2size(uint8_t t)$/;"	f
get_links	build_graph.c	/^int get_links(char *links_fn, cdict_t *cds, sdict_t *ctgs)$/;"	f
get_name2id	graph.c	/^uint32_t get_name2id(graph_t *g, char *nm)$/;"	f
get_path	graph.c	/^int get_path(graph_t *g, uint32_t min_l)$/;"	f
get_target_end	aa_hic.c	/^uint32_t get_target_end(uint32_t *cigar, int n_cigar, uint32_t s)$/;"	f
get_target_end	col_10x_lnks.c	/^uint32_t get_target_end(uint32_t *cigar, int n_cigar, uint32_t s)$/;"	f
graph_destroy	graph.c	/^void graph_destroy(graph_t *g)$/;"	f
graph_init	graph.c	/^graph_t *graph_init(void) $/;"	f
graph_t	graph.h	/^} graph_t;$/;"	t	typeref:struct:__anon24
h	cdict.h	/^	void		*h;$/;"	m	struct:__anon6
h	graph.h	/^	void *h;$/;"	m	struct:__anon23
h	graph.h	/^	void *h;\/\/namespace for vertices edges and paths$/;"	m	struct:__anon24
h	sdict.h	/^	void *h;$/;"	m	struct:__anon8
idx_edge	graph.c	/^int idx_edge(graph_t *g)$/;"	f
init_ctgs	col_hic_lnks.c	/^int init_ctgs(graph_t *g, sdict_t* ctgs) $/;"	f
init_gaps	aa_hic.c	/^void init_gaps(char *gap_fn, ns_t *ns, sdict_t *ctgs, uint32_t max_ins_len)$/;"	f
init_scaffs	col_hic_lnks.c	/^int init_scaffs(graph_t *g, sdict_t *ctgs, sdict_t *scfs)$/;"	f
init_seqs	col_hic_lnks.c	/^int init_seqs(char *fn, sdict_t *ctgs, sdict_t *scfs)$/;"	f
insert_sort	col_10x_lnks.c	/^void insert_sort(bc_t *b, bc_t *e)$/;"	f
is_added	cdict.h	/^	uint32_t cnt:31, is_added:1;	$/;"	m	struct:__anon5
is_circ	graph.h	/^	uint32_t n:31, is_circ:1; \/\/be careful with these uint32_t $/;"	m	struct:__anon20
is_del	graph.h	/^	uint32_t wt:30, is_vis:1, is_del:1;$/;"	m	struct:__anon18
is_eof	bed.h	/^	int is_eof;$/;"	m	struct:__anon25
is_l	bed.h	/^	uint32_t wt:30, is_l:1, is_l2:1;$/;"	m	struct:__anon29
is_l	cdict.h	/^	uint32_t snp_n:31, is_l:1;$/;"	m	struct:__anon5
is_l2	bed.h	/^	uint32_t wt:30, is_l:1, is_l2:1;$/;"	m	struct:__anon29
is_srt	graph.h	/^	uint32_t is_srt;$/;"	m	struct:__anon19
is_vis	graph.h	/^	uint32_t wt:30, is_vis:1, is_del:1;$/;"	m	struct:__anon18
isize	bamlite.h	/^	int32_t isize;$/;"	m	struct:__anon13
join_ends	graph.c	/^int join_ends(graph_t *g)$/;"	f
kcalloc	khash.h	180;"	d
kdq_at	kdq.h	17;"	d
kdq_destroy	kdq.h	119;"	d
kdq_first	kdq.h	15;"	d
kdq_init	kdq.h	118;"	d
kdq_last	kdq.h	16;"	d
kdq_pop	kdq.h	123;"	d
kdq_push	kdq.h	122;"	d
kdq_pushp	kdq.h	121;"	d
kdq_resize	kdq.h	120;"	d
kdq_shift	kdq.h	126;"	d
kdq_size	kdq.h	14;"	d
kdq_t	kdq.h	13;"	d
kdq_unshift	kdq.h	125;"	d
kdq_unshiftp	kdq.h	124;"	d
kfree	khash.h	189;"	d
kh_begin	khash.h	528;"	d
kh_clear	khash.h	453;"	d
kh_cstr_t	khash.h	/^typedef const char *kh_cstr_t;$/;"	t
kh_del	khash.h	491;"	d
kh_destroy	khash.h	446;"	d
kh_end	khash.h	535;"	d
kh_exist	khash.h	499;"	d
kh_foreach	khash.h	558;"	d
kh_foreach_value	khash.h	572;"	d
kh_get	khash.h	483;"	d
kh_init	khash.h	439;"	d
kh_inline	khash.h	148;"	d
kh_inline	khash.h	150;"	d
kh_int64_hash_equal	khash.h	389;"	d
kh_int64_hash_func	khash.h	385;"	d
kh_int_hash_equal	khash.h	379;"	d
kh_int_hash_func	khash.h	375;"	d
kh_int_hash_func2	khash.h	422;"	d
kh_key	khash.h	507;"	d
kh_n_buckets	khash.h	549;"	d
kh_put	khash.h	474;"	d
kh_resize	khash.h	461;"	d
kh_size	khash.h	542;"	d
kh_str_hash_equal	khash.h	410;"	d
kh_str_hash_func	khash.h	406;"	d
kh_val	khash.h	516;"	d
kh_value	khash.h	521;"	d
khash_t	khash.h	432;"	d
khint32_t	khash.h	/^typedef unsigned int khint32_t;$/;"	t
khint32_t	khash.h	/^typedef unsigned long khint32_t;$/;"	t
khint64_t	khash.h	/^typedef unsigned long khint64_t;$/;"	t
khint64_t	khash.h	/^typedef unsigned long long khint64_t;$/;"	t
khint_t	khash.h	/^typedef khint32_t khint_t;$/;"	t
khiter_t	khash.h	/^typedef khint_t khiter_t;$/;"	t
klib_unused	kdq.h	100;"	d
klib_unused	kdq.h	98;"	d
klib_unused	khash.h	156;"	d
klib_unused	khash.h	158;"	d
klib_unused	kseq.h	54;"	d
klib_unused	kseq.h	56;"	d
kmalloc	khash.h	183;"	d
krealloc	khash.h	186;"	d
kroundup32	bamlite.h	85;"	d
kroundup32	khash.h	176;"	d
kroundup32	kseq.h	104;"	d
ks_eof	kseq.h	48;"	d
ks_isort_stack_t	ksort.h	/^} ks_isort_stack_t;$/;"	t	typeref:struct:__anon30
ks_lt_generic	ksort.h	124;"	d
ks_lt_str	ksort.h	125;"	d
ks_rewind	kseq.h	49;"	d
kseq_rewind	kseq.h	180;"	d
ksstr_t	ksort.h	/^typedef const char *ksstr_t;$/;"	t
kstring_t	bed.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	kseq.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	ld_io.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kv_A	kvec.h	58;"	d
kv_a	kvec.h	94;"	d
kv_copy	kvec.h	72;"	d
kv_destroy	kvec.h	57;"	d
kv_init	kvec.h	56;"	d
kv_max	kvec.h	61;"	d
kv_pop	kvec.h	59;"	d
kv_push	kvec.h	78;"	d
kv_pushp	kvec.h	86;"	d
kv_reset	kvec.h	62;"	d
kv_resize	kvec.h	64;"	d
kv_reverse	kvec.h	100;"	d
kv_roundup32	kvec.h	53;"	d
kv_size	kvec.h	60;"	d
kvec_t	kvec.h	55;"	d
l	bed.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	ld_io.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l_aux	bamlite.h	/^	int l_aux, l_data, m_data;$/;"	m	struct:__anon14
l_data	bamlite.h	/^	int l_aux, l_data, m_data;$/;"	m	struct:__anon14
l_qname	bamlite.h	/^	uint32_t bin:16, qual:8, l_qname:8;$/;"	m	struct:__anon13
l_qseq	bamlite.h	/^	int32_t l_qseq;$/;"	m	struct:__anon13
l_snp_n	bed.h	/^	uint32_t    l_snp_n, r_snp_n;$/;"	m	struct:__anon27
l_snp_n	sdict.h	/^	uint32_t l_snp_n, r_snp_n;$/;"	m	struct:__anon7
l_text	bamlite.h	/^	size_t l_text, n_text;$/;"	m	struct:__anon12
ld_file_t	ld_io.h	/^} ld_file_t;$/;"	t	typeref:struct:__anon4
ld_t	ld.h	/^} ld_t;$/;"	t	typeref:struct:__anon15
le	bed.h	/^	uint32_t	rs, le;$/;"	m	struct:__anon27
le	sdict.h	/^	uint32_t le, rs;$/;"	m	struct:__anon7
left	ksort.h	/^	void *left, *right;$/;"	m	struct:__anon30
len	bed.h	/^	uint32_t	len;$/;"	m	struct:__anon27
len	graph.h	/^	uint32_t len;$/;"	m	struct:__anon16
len	sdict.h	/^	uint32_t len;$/;"	m	struct:__anon7
lim	cdict.h	/^	size_t		lim;$/;"	m	struct:__anon6
llen	bed.h	/^	uint32_t llen, rlen;$/;"	m	struct:__anon29
lnk_read	bed.c	/^int lnk_read(bed_file_t *pf, lnk_rec_t *r)$/;"	f
lnk_rec_t	bed.h	/^}lnk_rec_t;$/;"	t	typeref:struct:__anon29
load_gfa	graph.c	/^graph_t  *load_gfa(char *fn)$/;"	f
load_sat	graph.c	/^graph_t *load_sat(char *fn) $/;"	f
m	aa_hic.c	/^	size_t n, m;	$/;"	m	struct:__anon3	file:
m	bed.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	col_10x_lnks.c	/^	uint32_t n, m;$/;"	m	struct:__anon11	file:
m	graph.h	/^	uint32_t n, m;	$/;"	m	struct:__anon17
m	graph.h	/^	uint32_t n, m;$/;"	m	struct:__anon19
m	graph.h	/^	uint32_t n, m;$/;"	m	struct:__anon22
m	graph.h	/^	uint32_t n, m;$/;"	m	struct:__anon23
m	graph.h	/^	uint32_t n,m; \/\/be careful with these uint32_t$/;"	m	struct:__anon21
m	kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	ld_io.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m_cnt	cdict.h	/^	size_t		n_cnt, m_cnt;$/;"	m	struct:__anon6
m_data	bamlite.h	/^	int l_aux, l_data, m_data;$/;"	m	struct:__anon14
m_seq	sdict.h	/^	uint32_t n_seq, m_seq;$/;"	m	struct:__anon8
main	aa_hic.c	/^int main(int argc, char *argv[])$/;"	f
main	pin_10x.c	/^int main(int argc, char *argv[])$/;"	f
main	pin_hic.c	/^int main(int argc, char *argv[])$/;"	f
main	pin_ld.c	/^int main(int argc, char *argv[])$/;"	f
main_10x_lnks	col_10x_lnks.c	/^int main_10x_lnks(int argc, char *argv[])$/;"	f
main_bldg	build_graph.c	/^int main_bldg(int argc, char *argv[])$/;"	f
main_get_seq	get_seq.c	/^int main_get_seq(int argc, char *argv[])$/;"	f
main_gm_lnks	col_ld_lnks.c	/^int main_gm_lnks(int argc, char *argv[]) $/;"	f
main_hic_lnks	col_hic_lnks.c	/^int main_hic_lnks(int argc, char *argv[])$/;"	f
merge_graph	graph.c	/^int merge_graph(graph_t *g, graph_t *c, int all)$/;"	f
mpos	bamlite.h	/^	int32_t mpos;$/;"	m	struct:__anon13
mq	aa_hic.c	/^	int mq:15, rev:1, as:16;$/;"	m	struct:__anon2	file:
mq	col_10x_lnks.c	/^	int mq:15, rev:1, as:16;$/;"	m	struct:__anon9	file:
mtid	bamlite.h	/^	int32_t mtid;$/;"	m	struct:__anon13
n	aa_hic.c	/^	size_t n, m;	$/;"	m	struct:__anon3	file:
n	col_10x_lnks.c	/^	uint32_t n, m;$/;"	m	struct:__anon11	file:
n	graph.h	/^	uint32_t n, m;	$/;"	m	struct:__anon17
n	graph.h	/^	uint32_t n, m;$/;"	m	struct:__anon19
n	graph.h	/^	uint32_t n, m;$/;"	m	struct:__anon22
n	graph.h	/^	uint32_t n, m;$/;"	m	struct:__anon23
n	graph.h	/^	uint32_t n,m; \/\/be careful with these uint32_t$/;"	m	struct:__anon21
n	graph.h	/^	uint32_t n:31, is_circ:1; \/\/be careful with these uint32_t $/;"	m	struct:__anon20
n_cigar	bamlite.h	/^	uint32_t flag:16, n_cigar:16;$/;"	m	struct:__anon13
n_cnt	cdict.h	/^	size_t		n_cnt, m_cnt;$/;"	m	struct:__anon6
n_del	graph.h	/^	uint32_t n_del;$/;"	m	struct:__anon19
n_seq	sdict.h	/^	uint32_t n_seq, m_seq;$/;"	m	struct:__anon8
n_targets	bamlite.h	/^	int32_t n_targets;$/;"	m	struct:__anon12
n_text	bamlite.h	/^	size_t l_text, n_text;$/;"	m	struct:__anon12
name	cdict.h	/^	char	*name; $/;"	m	struct:__anon5
name	graph.h	/^	char *name;$/;"	m	struct:__anon16
name	graph.h	/^	char *name;$/;"	m	struct:__anon20
name	graph.h	/^	char *name;$/;"	m	struct:__anon22
name	sdict.h	/^	char *name;$/;"	m	struct:__anon7
norm_cdf	col_10x_lnks.c	/^float norm_cdf(int x, float p, int n) {$/;"	f
ns	col_hic_lnks.c	/^	uint32_t s, ns;$/;"	m	struct:__anon1	file:
ns	graph.h	/^	uint32_t *ns;$/;"	m	struct:__anon20
ns_t	aa_hic.c	/^}ns_t;$/;"	t	typeref:struct:__anon3	file:
open_ld	ld_io.c	/^ld_file_t * open_ld(const char *ld_fn)$/;"	f
out_asms	graph.c	/^int out_asms(graph_t *g)$/;"	f
out_edges	graph.c	/^int out_edges(graph_t *g, int all)$/;"	f
out_graph	graph.c	/^int out_graph(graph_t *g)$/;"	f
out_matrix	col_10x_lnks.c	/^void out_matrix(cdict_t *cds, sdict_t *ctgs, uint32_t n)$/;"	f
out_matrix	col_hic_lnks.c	/^void out_matrix(cdict_t *cds, sdict_t *ctgs, uint32_t n)$/;"	f
out_paths	graph.c	/^int out_paths(graph_t *g)$/;"	f
out_record	col_ld_lnks.c	/^void out_record(cdict_t *cds, sdict_t *ctgs, uint32_t n)$/;"	f
out_vetices	graph.c	/^int out_vetices(graph_t *g)$/;"	f
p	ld.h	/^	double		p;         \/\/ P-value$/;"	m	struct:__anon15
p1	ld.h	/^	float		p1, p2, q1, q2;$/;"	m	struct:__anon15
p2	ld.h	/^	float		p1, p2, q1, q2;$/;"	m	struct:__anon15
parse_ld_t	ld_io.c	/^int parse_ld_t(kstring_t *buf, ld_t *t)$/;"	f
parse_path	col_hic_lnks.c	/^uint32_t *parse_path(graph_t *g, uint32_t pid, uint32_t *n)$/;"	f
path_t	graph.h	/^}path_t;$/;"	t	typeref:struct:__anon20
paths	graph.h	/^	path_t *paths;$/;"	m	struct:__anon21
paths_t	graph.h	/^}paths_t;$/;"	t	typeref:struct:__anon21
pn	graph.h	/^	uint32_t *pn;$/;"	m	struct:__anon22
pos	bamlite.h	/^	int32_t pos;$/;"	m	struct:__anon13
pos1	ld.h	/^	uint32_t	pos1;$/;"	m	struct:__anon15
pos2	ld.h	/^	uint32_t	pos2;$/;"	m	struct:__anon15
proc_bam	aa_hic.c	/^int proc_bam(char *bam_fn, int min_mq, uint32_t max_ins_len, sdict_t *ctgs, ctg_pos_t *d, char *gap_fn, ns_t *ns)$/;"	f
proc_bam	col_10x_lnks.c	/^int proc_bam(char *bam_fn, int min_mq, uint32_t max_is, uint32_t ws, sdict_t *ctgs, int opt, bc_ary_t *bc_l)$/;"	f
proc_bam	col_hic_lnks.c	/^int proc_bam(char *bam_fn, int min_mq, sdict_t *ctgs, sdict_t *scfs, cdict_t **cs)$/;"	f
proc_ld	col_ld_lnks.c	/^int proc_ld(char *ld_fn, double pv, sdict_t *ctgs, cdict_t *cds)$/;"	f
process_graph	graph.c	/^int process_graph(graph_t *g)$/;"	f
pt	graph.h	/^	paths_t pt;$/;"	m	struct:__anon24
q1	ld.h	/^	float		p1, p2, q1, q2;$/;"	m	struct:__anon15
q2	ld.h	/^	float		p1, p2, q1, q2;$/;"	m	struct:__anon15
qual	bamlite.h	/^	uint32_t bin:16, qual:8, l_qname:8;$/;"	m	struct:__anon13
r	ld.h	/^	float		r, r2;     \/\/ Correlation coefficient$/;"	m	struct:__anon15
r2	ld.h	/^	float		r, r2;     \/\/ Correlation coefficient$/;"	m	struct:__anon15
r_snp_n	bed.h	/^	uint32_t    l_snp_n, r_snp_n;$/;"	m	struct:__anon27
r_snp_n	sdict.h	/^	uint32_t l_snp_n, r_snp_n;$/;"	m	struct:__anon7
rc_table	graph.c	/^uint8_t rc_table[128]={$/;"	v
read_ld1	ld_io.c	/^int read_ld1(ld_file_t *ld_fp, ld_t *t)$/;"	f
read_seq	graph.c	/^int read_seq(graph_t *g, char *seqfn)$/;"	f
rev	aa_hic.c	/^	int mq:15, rev:1, as:16;$/;"	m	struct:__anon2	file:
rev	col_10x_lnks.c	/^	int mq:15, rev:1, as:16;$/;"	m	struct:__anon9	file:
rev	col_hic_lnks.c	/^   	uint32_t tid:31, rev:1;$/;"	m	struct:__anon1	file:
right	ksort.h	/^	void *left, *right;$/;"	m	struct:__anon30
rlen	bed.h	/^	uint32_t llen, rlen;$/;"	m	struct:__anon29
rs	bed.h	/^	uint32_t	rs, le;$/;"	m	struct:__anon27
rs	sdict.h	/^	uint32_t le, rs;$/;"	m	struct:__anon7
s	aa_hic.c	/^	uint32_t s, e, tid;$/;"	m	struct:__anon2	file:
s	bed.h	/^	char *s;$/;"	m	struct:__kstring_t
s	bed.h	/^	uint32_t s, e;$/;"	m	struct:__anon28
s	col_10x_lnks.c	/^	uint32_t s, e, tid;$/;"	m	struct:__anon9	file:
s	col_10x_lnks.c	/^	uint32_t s, e; \/\/no more than $/;"	m	struct:__anon10	file:
s	col_hic_lnks.c	/^	uint32_t s, ns;$/;"	m	struct:__anon1	file:
s	kseq.h	/^	char *s;$/;"	m	struct:__kstring_t
s	ld_io.h	/^	char *s;$/;"	m	struct:__kstring_t
sd_destroy	sdict.c	/^void sd_destroy(sdict_t *d)$/;"	f
sd_get	sdict.c	/^int32_t sd_get(const sdict_t *d, const char *name)$/;"	f
sd_hash	sdict.c	/^void sd_hash(sdict_t *d)$/;"	f
sd_init	sdict.c	/^sdict_t *sd_init(void)$/;"	f
sd_put	sdict.c	/^int32_t sd_put(sdict_t *d, const char *name)$/;"	f
sd_put2	sdict.c	/^int32_t sd_put2(sdict_t *d, const char *name, uint32_t len, uint32_t le, uint32_t rs, uint32_t l_snp_n, uint32_t r_snp_n)$/;"	f
sd_seq_t	sdict.h	/^} sd_seq_t;$/;"	t	typeref:struct:__anon7
sd_squeeze	sdict.c	/^int32_t *sd_squeeze(sdict_t *d)$/;"	f
sdict_t	sdict.h	/^} sdict_t;$/;"	t	typeref:struct:__anon8
seq	graph.h	/^	char *seq;$/;"	m	struct:__anon16
seq	sdict.h	/^	sd_seq_t *seq;$/;"	m	struct:__anon8
set_c	graph.c	/^int set_c(graph_t *g, char *s)$/;"	f
shash_t	cdict.c	/^typedef khash_t(str) shash_t;$/;"	t	file:
shash_t	graph.c	/^typedef khash_t(str) shash_t;$/;"	t	file:
shash_t	sdict.c	/^typedef khash_t(str) shash_t;$/;"	t	file:
snp_n	cdict.h	/^	uint32_t snp_n:31, is_l:1;$/;"	m	struct:__anon5
srch_path	graph.c	/^int srch_path(graph_t *g)$/;"	f
srt_by_nm_loc	col_10x_lnks.c	/^void srt_by_nm_loc(bc_t *s, bc_t *e)$/;"	f
swap_endian_data	bamlite.c	/^static void swap_endian_data(const bam1_core_t *c, int l_data, uint8_t *data)$/;"	f	file:
target_len	bamlite.h	/^	uint32_t *target_len;$/;"	m	struct:__anon12
target_name	bamlite.h	/^	char **target_name;$/;"	m	struct:__anon12
text	bamlite.h	/^	char *text;$/;"	m	struct:__anon12
tid	aa_hic.c	/^	uint32_t s, e, tid;$/;"	m	struct:__anon2	file:
tid	bamlite.h	/^	int32_t tid;$/;"	m	struct:__anon13
tid	col_10x_lnks.c	/^	uint32_t s, e, tid;$/;"	m	struct:__anon9	file:
tid	col_hic_lnks.c	/^   	uint32_t tid:31, rev:1;$/;"	m	struct:__anon1	file:
type	bed.h	/^	char *type;$/;"	m	struct:__anon26
update_graph	graph.c	/^int update_graph(graph_t *g) \/\/ update index$/;"	f
v	graph.h	/^	uint32_t v; \/\/$/;"	m	struct:__anon18
vertex_t	graph.h	/^}vertex_t;$/;"	t	typeref:struct:__anon16
vertices	graph.h	/^	vertex_t *vertices;$/;"	m	struct:__anon17
vertices_t	graph.h	/^}vertices_t;$/;"	t	typeref:struct:__anon17
vis_r	graph.c	/^int vis_r(graph_t *g, edge_t *a)$/;"	f
vtx	graph.h	/^	vertices_t vtx;$/;"	m	struct:__anon24
w	graph.h	/^	uint32_t w; \/\/$/;"	m	struct:__anon18
wt	bed.h	/^	uint32_t wt:30, is_l:1, is_l2:1;$/;"	m	struct:__anon29
wt	graph.h	/^	uint32_t wt:30, is_vis:1, is_del:1;$/;"	m	struct:__anon18
